<%= render :partial => 'spree/admin/shared/js_head' %>

<% content_for :page_title do %>
  <%= t('spree.active_sale.title.edit') %> &#62; <%= @active_sale.name %>
<% end %>

<% content_for :page_actions do %>
  <li>
    <%= button_link_to t('spree.active_sale.link.back'), collection_url, :icon => 'icon-arrow-left', :id => 'admin_new_active_sale_link' %>
  </li>
<% end %>

<div id="ajax_error" class="errorExplanation" style="display:none;"></div>

<fieldset class="no-border-top">
  <div>
    <%= label_tag nil, Spree.t(:tree) %><br />
    <div id="active_sale_tree" class="tree" data-url="<%= admin_active_sale_active_sale_events_path @active_sale %>"></div>
  </div>
  <div id="progress" style="display:none;">
    <%#= image_tag 'spinner.gif', :title => 'Spinner', :style => "vertical-align:bottom;" %> <%= Spree.t(:updating) %>..
  </div>

  <p class='hint info'>
    <%= t('spree.active_sale.event.active_sale_tree_hint') %>
  </p>

  <br>
</fieldset>

<% content_for :head do %>
  <%= javascript_tag do -%>
    var initial = [
      { "attr" :
      { "id" : "<%= @active_sale.root.try(:id) %>", "rel" : "root", "parent_id" : "nil" },
      "data" : "<%= escape_javascript(raw(@active_sale.root.try(:name))) %>",
      "state" : "open",
      "children" : [
        <% unless @active_sale.root.nil? %>
          <% @active_sale.root.children_sorted_by_position.each_with_index do |event,i| %>
            {
              "attr" :
              { "id" : "<%= event.id %>", "parent_id" : "<%= event.parent_id %>" },
              "data" : "<%= escape_javascript(raw(event_js_data(event))) %>"
              <% unless event.children.empty? %>
                ,"state" : "closed"
              <% end %>
            }<%= ',' if i < (@active_sale.root.children.size - 1) %>
          <% end %>
        <% end %>
      ]
        }
    ];


        $(document).ready(function(){
        alert('loaded');
        if(active_sale_id!=undefined){

        base_url = $("#active_sale_tree").data("url").split("?")[0] + "/" ;
        update_url = '/update_events/';
        child_url = base_url.replace("/active_sale_events", "/get_children.json");

        is_cut = false;
        last_rollback = null;

        var conf = {
        json_data : {
        "data" : initial,
        "ajax" : {
        "url" : child_url,
        "data" : function (n) {
        return { parent_id : n.attr ? n.attr("id") : 0 };
        }
        }
        },
        "themes" : {
        "theme" : "apple",
        "url" : "/assets/jquery.jstree/themes/apple/style.css"
        },
        "strings" : {
        "new_node" : new_active_sale_event,
        "loading" : Spree.translations.loading + "..."
        },
        "crrm" : {
        "move" : {
        "check_move" : function (m) {
        var position = m.cp;
        var node = m.o;
        var new_parent = m.np;

        if(!new_parent) return false; //no parent

        if(node.attr("rel")=="root") return false; //can't drag root

        if(new_parent.attr("id")=="active_sale_tree" && position==0) return false; // can't drop before root

        return true;

        }
        }
        },
        "contextmenu" : {
        "items" : function(obj) {
        var id_of_node = obj.attr("id");
        var type_of_node = obj.attr("rel");
        var menu = {};
        if(type_of_node == "root") {
        menu = {
        "create" : {
        "label"            : "<i class='icon-plus'></i> " + Spree.translations.add,
        "action"           : function (obj) { window.location = base_url + "new/?parent_id=" + obj.attr("id"); }
        },
        "paste" : {
        "separator_before" : true,
        "label"            : "<i class='icon-paste'></i> " + Spree.translations.paste,
        "action"           : function (obj) { is_cut = false; this.paste(obj); },
        "_disabled"        : is_cut == false
        },
        "edit" : {
        "separator_before" : true,
        "label"            : "<i class='icon-edit'></i> " + Spree.translations.edit,
        "action"           : function (obj) { window.location = base_url + obj.attr("id") + "/edit/" + "?parent_id=" + obj.attr("parent_id"); }
        }
        }
        } else {
        menu =  {
        "create" : {
        "label"            : "<i class='icon-plus'></i> " + Spree.translations.add,
        "action"           : function (obj) { window.location = base_url + "new/?parent_id=" + obj.attr("id"); }
        },
        "remove" : {
        "label"            : "<i class='icon-trash'></i> " + Spree.translations.remove,
        "action"           : function (obj) { this.remove(obj); }
        },
        "cut" : {
        "separator_before" : true,
        "label"            : "<i class='icon-cut'></i> " + Spree.translations.cut,
        "action"           : function (obj) { is_cut = true; this.cut(obj); }
        },
        "paste" : {
        "label"            : "<i class='icon-paste'></i> " + Spree.translations.paste,
        "action"           : function (obj) { is_cut = false; this.paste(obj); },
        "_disabled"        : is_cut == false
        },
        "edit" : {
        "separator_before" : true,
        "label"            : "<i class='icon-edit'></i> " + Spree.translations.edit,
        "action"           : function (obj) { window.location = base_url + obj.attr("id") + "/edit/" + "?parent_id=" + obj.attr("parent_id"); }
        }
        }
        }
        return menu;
        }
        },

        "plugins" : [ "themes", "json_data", "dnd", "crrm", "contextmenu"]
        }

        $("#active_sale_tree").jstree(conf)
        .bind("move_node.jstree", handle_move)
        .bind("remove.jstree", handle_delete)
        .bind("rename.jstree", handle_rename);

        $("#active_sale_tree a").on("dblclick", function (e) {
        $("#active_sale_tree").jstree("rename", this)
        });


        $(document).keypress(function(e){
        //surpress form submit on enter/return
        if (e.keyCode == 13){
        e.preventDefault();
        }
        });
        }
        });

    <% end -%>
<% end %>

